{"version":3,"sources":["components/navbar/navbar.js","components/header/header.js","components/graph/graph.js","components/filters/Country.js","components/filters/State.js","components/filters/City.js","components/filters/Filter.js","components/map/map.js","components/mailing/mailing.js","components/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["NavbarTop","className","Row","Col","xs","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","id","Nav","Link","href","Component","Header","autoPlay","loop","muted","type","src","process","Graph","aqiGraph","document","getElementById","chartData","labels","datasets","data","backgroundColor","barPercentage","Chart","options","legend","display","Country","countries","Fragment","map","country","value","name","key","State","states","state","City","cities","city","Filter","countrySelected","selectedCountryId","stateSelected","selectedStateId","updateStates","countrySel","selectedIndex","setState","getStates","updateCities","stateSel","getCities","console","log","fetch","then","res","json","catch","error","statesUrl","push","citiesUrl","Form","Group","as","Control","onChange","this","defaultValue","Button","GoogleMap","google","props","zoom","style","width","height","initialCenter","lat","lng","GoogleApiWrapper","apiKey","Mailing","placeholder","Footer","App","Container","fluid","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.95f2743e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport './navbar.scss';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass NavbarTop extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"navbarTop\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xs={9}>\r\n\t\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t\t{/* <img src={process.env.PUBLIC_URL + '/images/logo.svg'} /> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col xs={3}>\r\n\t\t\t\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t\t\t\t{/* <Navbar.Brand href=\"/#\">Aura</Navbar.Brand> */}\r\n\t\t\t\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/#\">Home</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/#\">iAura</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/#\">Team</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link href=\"/#\">Contact</Nav.Link>\r\n\t\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t\t\t</Navbar >\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NavbarTop;\r\n","import React, { Component } from 'react';\r\nimport './header.scss';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass Header extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<video autoPlay loop muted>\r\n\t\t\t\t\t\t\t<source type=\"video/mp4\" src={process.env.PUBLIC_URL + '/video.mp4'}></source>\r\n\t\t\t\t\t\t</video>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<div className=\"headerText\">\r\n\t\t\t\t\t\t<Col xs={6}>\r\n\t\t\t\t\t\t\t<div className=\"headerText-left\">\r\n\t\t\t\t\t\t\t\t<h1>Planning to travel?</h1>\r\n\t\t\t\t\t\t\t\t<p>Get to know about the air quality of your destination ahead of time.</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs={6}>\r\n\t\t\t\t\t\t\t<div className=\"headerText-right\">\r\n\t\t\t\t\t\t\t\t<h3>Secure your trip</h3>\r\n\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t<p>Know about the precautions you can follow, carry ons and best travel time to your destination.</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</header >\r\n\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport Chart from 'chart.js';\r\nimport './graph.scss';\r\n\r\nclass Graph extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<canvas id=\"aqiGraph\"></canvas>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet aqiGraph = document.getElementById(\"aqiGraph\");\r\n\r\n\t\tlet colors = ['#00ff00', '#ffff00', '#ff9900', '#ff0000', '#a64d79', '#cc0000'];\r\n\t\tlet chartData = {\r\n\t\t\tlabels: [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\r\n\t\t\tdatasets: [{\r\n\t\t\t\tdata: [5, 10, 20, 30, 40, 50, 60, 70, 80, 90],\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t\tbarPercentage: 1\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\tif (aqiGraph) {\r\n\t\t\tnew Chart(aqiGraph, {\r\n\t\t\t\ttype: 'bar',\r\n\t\t\t\tdata: chartData,\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tdisplay: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\n\r\nconst Country = ({ countries }) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tcountries.map((country) => (\r\n\t\t\t\t\t<option value={country.name} key={country.id} id={country.id}>{country.name}</option>\r\n\t\t\t\t))\r\n\t\t\t};\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default Country;\r\n","import React from 'react';\r\n\r\nconst State = ({ states }) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tstates.map((state) => (\r\n\t\t\t\t\t<option value={state.name} key={\"State\" + state.id} id={state.id} > {state.name}</option>\r\n\t\t\t\t))\r\n\t\t\t};\r\n\t\t</React.Fragment >\r\n\t);\r\n}\r\n\r\nexport default State;\r\n","import React from 'react';\r\n\r\nconst City = ({ cities }) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tcities.map((city) => (\r\n\t\t\t\t\t<option value={city.name} key={\"City\" + city.id} id={city.id}>{city.name}</option>\r\n\t\t\t\t))\r\n\t\t\t};\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default City;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport Graph from '../graph/graph';\r\nimport './filters.scss';\r\nimport Country from './Country';\r\nimport State from './State';\r\nimport City from './City';\r\n\r\nlet states = [];\r\nlet cities = [];\r\n\r\nclass Filter extends Component {\r\n\tstate = {\r\n\t\tcountries: [],\r\n\t\tcountrySelected: false,\r\n\t\tselectedCountryId: \"\",\r\n\t\tstates: [],\r\n\t\tstateSelected: false,\r\n\t\tselectedStateId: \"\",\r\n\t\tcities: []\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst countryUrl = \"http://localhost:3002/api/countries\";\r\n\t\tawait fetch(countryUrl)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcountries: data\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(\"Error fetching countries: \" + error);\r\n\t\t\t});\r\n\t};\r\n\r\n\tasync getStates(id) {\r\n\t\tconst statesUrl = \"http://localhost:3002/api/states/\" + id;\r\n\t\tawait fetch(statesUrl)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tstates: data\r\n\t\t\t\t});\r\n\t\t\t\tstates.push(data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(\"Error fetching states: \" + error);\r\n\t\t\t});\r\n\r\n\t\treturn states;\r\n\t};\r\n\r\n\tasync getCities(id) {\r\n\t\tconst citiesUrl = \"http://localhost:3002/api/cities/\" + id;\r\n\t\tawait fetch(citiesUrl)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcities: data\r\n\t\t\t\t});\r\n\t\t\t\tcities.push(data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(\"Error fetching states: \" + error);\r\n\t\t\t});\r\n\r\n\t\treturn cities;\r\n\t}\r\n\r\n\tupdateStates = () => {\r\n\t\tlet countrySel = document.getElementById(\"country-sel\");\r\n\t\tlet selectedCountryId = countrySel.options[countrySel.selectedIndex].id;\r\n\r\n\t\tif (selectedCountryId !== \"c0\")\r\n\t\t\tthis.setState({\r\n\t\t\t\tcountrySelected: true,\r\n\t\t\t\tselectedCountryId: selectedCountryId,\r\n\t\t\t\tstates: [...this.state.states, this.getStates(selectedCountryId)]\r\n\t\t\t});\r\n\t};\r\n\r\n\tupdateCities = () => {\r\n\t\tlet stateSel = document.getElementById(\"state-sel\");\r\n\t\tlet selectedStateId = stateSel.options[stateSel.selectedIndex].id;\r\n\r\n\t\tif (selectedStateId !== \"s0\")\r\n\t\t\tthis.setState({\r\n\t\t\t\tstateSelected: true,\r\n\t\t\t\tselectedStateId: selectedStateId,\r\n\t\t\t\tcities: [...this.state.cities, this.getCities(selectedStateId)]\r\n\t\t\t});\r\n\t\tconsole.log(stateSel);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"filters-container\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xs={1}></Col>\r\n\t\t\t\t\t<Col xs={3}>\r\n\t\t\t\t\t\t<div className=\"filters-box\">\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<Form.Group as={Col}>\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" id=\"country-sel\" onChange={this.updateStates}>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Select Country\" id=\"c0\" defaultValue>Select Country</option>\r\n\t\t\t\t\t\t\t\t\t\t<Country countries={this.state.countries} />\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" id=\"state-sel\" onChange={this.updateCities}>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Select Province\" id=\"s0\" defaultValue>Select Province/State</option>\r\n\t\t\t\t\t\t\t\t\t\t<State states={this.state.states} />\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" id=\"city-sel\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Select City\" id=\"ct0\" defaultValue>Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t<City cities={this.state.cities} />\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"date\">\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tCheck AQI\r\n \t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col xs={2}></Col>\r\n\t\t\t\t\t<Col xs={6}>\r\n\t\t\t\t\t\t<Graph />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div >\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\nimport './map.scss';\r\n\r\nclass GoogleMap extends Component {\r\n\trender() {\r\n\t\tconst mapStyles = {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"map-container\">\r\n\t\t\t\t<Map\r\n\t\t\t\t\tgoogle={this.props.google}\r\n\t\t\t\t\tzoom={8}\r\n\t\t\t\t\tstyle={mapStyles}\r\n\t\t\t\t\tinitialCenter={{\r\n\t\t\t\t\t\tlat: 47.444,\r\n\t\t\t\t\t\tlng: -122.176\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* </Map > */}\r\n\t\t\t\t/>\r\n\t\t\t</div >\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n\tapiKey: 'AIzaSyCV3jnecKNQQ2dl1ZI7VLNsJAJyiyDRICk'\r\n})(GoogleMap);","import React, { Component } from 'react';\r\nimport './mailing.scss';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\n\r\nclass Mailing extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"mailingListOuter\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<div className=\"mailingListContainer\">\r\n\t\t\t\t\t\t<div className=\"mailingList\">\r\n\t\t\t\t\t\t\t<h4>Join our mailing list</h4>\r\n\t\t\t\t\t\t\t<p>Get updates, straight to your inbox!</p>\r\n\t\t\t\t\t\t\t<Form className=\"mailingForm\">\r\n\t\t\t\t\t\t\t\t<Form.Group as={Col}>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter your email here\" id=\"mailingInp\" />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" id=\"mailingBtn\">\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n \t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"bgCircle\"></div>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Mailing;\r\n","import React, { Component } from 'react';\r\nimport './footer.scss';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t<p>Copyright &copy; 2020 - Aura</p>\r\n\t\t\t\t\t\t<p>Terms & Conditions | All Rights Reserved</p>\r\n\t\t\t\t\t</footer>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport Navbar from './components/navbar/navbar';\r\nimport Header from './components/header/header';\r\nimport Filter from './components/filters/Filter';\r\nimport GoogleMap from './components/map/map';\r\nimport Mailing from './components/mailing/mailing';\r\nimport Footer from './components/footer/footer';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Filter />\r\n\t\t\t\t\t<GoogleMap />\r\n\t\t\t\t\t<Mailing />\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}