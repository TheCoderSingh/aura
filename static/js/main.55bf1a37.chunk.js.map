{"version":3,"sources":["components/navbar/navbar.js","components/header/header.js","components/graph/graph.js","components/filters/filters.js","components/map/map.js","components/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["NavbarTop","Row","Col","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Component","Header","autoPlay","loop","muted","type","src","process","Graph","aqiGraph","document","getElementById","chartData","labels","datasets","data","backgroundColor","barPercentage","Chart","options","legend","display","Filter","xs","Form","Group","as","controlId","Control","value","defaultValue","Button","GoogleMap","google","this","props","zoom","style","width","height","initialCenter","lat","lng","GoogleApiWrapper","apiKey","Footer","App","Container","fluid","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mZA4BeA,E,iLArBb,OACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACtD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,MAAnB,QACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBACnB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACd,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,MAAf,QACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,MAAf,SACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,MAAf,QACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,MAAf,oB,GAbgBQ,aCeTC,G,uLAdb,OACC,kBAACjB,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,gCACC,2BAAOiB,UAAQ,EAACC,MAAI,EAACC,OAAK,GACzB,4BAAQC,KAAK,YAAYC,IAAKC,4B,GAPhBP,c,yCCkCNQ,G,uLAhCb,OACC,4BAAQZ,GAAG,e,0CAKZ,IAAIa,EAAWC,SAASC,eAAe,YAGnCC,EAAY,CACfC,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACjFC,SAAU,CAAC,CACVC,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1CC,gBALW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAMnEC,cAAe,KAIbR,GACH,IAAIS,IAAMT,EAAU,CACnBJ,KAAM,MACNU,KAAMH,EACNO,QAAS,CACRC,OAAQ,CACPC,SAAS,U,GA1BKrB,cCsCLsB,E,iLAnCb,OACC,yBAAKxB,UAAU,qBACd,kBAACd,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKsC,GAAI,GACR,yBAAKzB,UAAU,eACd,kBAAC0B,EAAA,EAAD,KACC,kBAACA,EAAA,EAAKC,MAAN,CAAYC,GAAIzC,IAAK0C,UAAU,eAE9B,kBAACH,EAAA,EAAKI,QAAN,CAAcF,GAAG,UAChB,4BAAQG,MAAM,iBAAiBC,cAAY,GAA3C,mBAED,kBAACN,EAAA,EAAKI,QAAN,CAAcF,GAAG,UAChB,4BAAQG,MAAM,kBAAkBC,cAAY,GAA5C,oBAED,kBAACN,EAAA,EAAKI,QAAN,CAAcF,GAAG,UAChB,4BAAQG,MAAM,cAAcC,cAAY,GAAxC,gBAED,kBAACN,EAAA,EAAKI,QAAN,CAAcvB,KAAK,UAGpB,kBAAC0B,EAAA,EAAD,CAAQzC,QAAQ,UAAUe,KAAK,UAA/B,gBAMH,kBAACpB,EAAA,EAAD,CAAKsC,GAAI,GACR,kBAAC,EAAD,a,GA7BevB,a,QCDfgC,G,uLAOJ,OACC,yBAAKlC,UAAU,iBACd,kBAAC,MAAD,CACCmC,OAAQC,KAAKC,MAAMF,OACnBG,KAAM,EACNC,MAVe,CACjBC,MAAO,OACPC,OAAQ,QASNC,cAAe,CACdC,IAAK,OACLC,KAAM,WAPT,U,GARqB1C,cAyBT2C,6BAAiB,CAC/BC,OAAQ,2CADMD,CAEZX,GCZYa,G,uLAbb,OACC,kBAAC7D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,gCACC,yDACA,8E,GAPee,c,QCqBN8C,E,iLAdb,OACC,yBAAKhD,UAAU,OACd,kBAACiD,EAAA,EAAD,CAAWC,OAAK,GACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GATahD,aCGEiD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS7C,SAASC,eAAe,SD6H3C,kBAAmB6C,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.55bf1a37.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport './navbar.scss';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass NavbarTop extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t\t\t<Navbar.Brand href=\"/#\">Aura</Navbar.Brand>\r\n\t\t\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t\t\t<Nav.Link href=\"/#\">Home</Nav.Link>\r\n\t\t\t\t\t\t\t\t<Nav.Link href=\"/#\">iAura</Nav.Link>\r\n\t\t\t\t\t\t\t\t<Nav.Link href=\"/#\">Team</Nav.Link>\r\n\t\t\t\t\t\t\t\t<Nav.Link href=\"/#\">Contact</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t\t</Navbar>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NavbarTop;\r\n","import React, { Component } from 'react';\r\nimport './header.scss';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass Header extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<video autoPlay loop muted>\r\n\t\t\t\t\t\t\t<source type=\"video/mp4\" src={process.env.PUBLIC_URL + '/video.mp4'}></source>\r\n\t\t\t\t\t\t</video>\r\n\t\t\t\t\t</header >\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport Chart from 'chart.js';\r\nimport './graph.scss';\r\n\r\nclass Graph extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<canvas id=\"aqiGraph\"></canvas>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet aqiGraph = document.getElementById(\"aqiGraph\");\r\n\r\n\t\tlet colors = ['#00ff00', '#ffff00', '#ff9900', '#ff0000', '#a64d79', '#cc0000'];\r\n\t\tlet chartData = {\r\n\t\t\tlabels: [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\r\n\t\t\tdatasets: [{\r\n\t\t\t\tdata: [5, 10, 20, 30, 40, 50, 60, 70, 80, 90],\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t\tbarPercentage: 1\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\tif (aqiGraph) {\r\n\t\t\tnew Chart(aqiGraph, {\r\n\t\t\t\ttype: 'bar',\r\n\t\t\t\tdata: chartData,\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tdisplay: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Graph;\r\n","import React, { Component } from 'react';\r\nimport './filters.scss';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport Graph from '../graph/graph';\r\n\r\nclass Filter extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"filters-container\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xs={3}>\r\n\t\t\t\t\t\t<div className=\"filters-box\">\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<Form.Group as={Col} controlId=\"formFilters\">\r\n\t\t\t\t\t\t\t\t\t{/* <Form.label>Choose a country</Form.Label> */}\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Select Country\" defaultValue>Select Country</option>\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Select Province\" defaultValue>Select Province</option>\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Select City\" defaultValue>Select City</option>\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"date\">\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tCheck AQI\r\n  \t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col xs={9}>\r\n\t\t\t\t\t\t<Graph />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div >\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\nimport './map.scss';\r\n\r\nclass GoogleMap extends Component {\r\n\trender() {\r\n\t\tconst mapStyles = {\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"map-container\">\r\n\t\t\t\t<Map\r\n\t\t\t\t\tgoogle={this.props.google}\r\n\t\t\t\t\tzoom={8}\r\n\t\t\t\t\tstyle={mapStyles}\r\n\t\t\t\t\tinitialCenter={{\r\n\t\t\t\t\t\tlat: 47.444,\r\n\t\t\t\t\t\tlng: -122.176\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* </Map > */}\r\n\t\t\t\t/>\r\n\t\t\t</div >\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n\tapiKey: 'AIzaSyCV3jnecKNQQ2dl1ZI7VLNsJAJyiyDRICk'\r\n})(GoogleMap);","import React, { Component } from 'react';\r\nimport './footer.scss';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t<p>Copyright &copy; 2020 - Aura</p>\r\n\t\t\t\t\t\t<p>Terms & Conditions | All Rights Reserved</p>\r\n\t\t\t\t\t</footer>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Navbar from './components/navbar/navbar';\nimport Header from './components/header/header';\nimport Filter from './components/filters/filters';\nimport GoogleMap from './components/map/map';\nimport Footer from './components/footer/footer';\nimport { Container } from 'react-bootstrap';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Filter />\n\t\t\t\t\t<GoogleMap />\n\t\t\t\t\t<Footer />\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}